{"version":3,"file":"static/js/113.ca9e2e51.chunk.js","mappings":"+SAEMA,EAAW,+BACXC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,uGACEC,EAAAA,EAAAA,IAAA,UACFH,EADE,qCACmCC,EADnC,qBADF,kEAMA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,0FACEF,EAAAA,EAAAA,IAAA,UACFH,EADE,iCAC+BC,EAD/B,iCAC+DI,KAFjE,kEAMA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,0FACEJ,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA+BO,EAA/B,oBAA6CN,EAA7C,qBADF,kEAIA,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WAA+BD,GAA/B,0FACEJ,EAAAA,EAAAA,IAAA,UACFH,EADE,kBACgBO,EADhB,4BACsCN,EADtC,qBADF,kEAMA,SAAeQ,EAAtB,+CAAO,OAAP,oBAAO,WAA+BF,GAA/B,0FACEJ,EAAAA,EAAAA,IAAA,UACFH,EADE,kBACgBO,EADhB,4BACsCN,EADtC,qBADF,kE,iICrBMS,EAAe,WAC1B,OAAwCC,EAAAA,EAAAA,UAAS,CAAC,GAAlD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAgCF,EAAAA,EAAAA,WAAS,GAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KAEMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAUF,EAASG,SAASC,MAAM,KAAK,IAE7CC,EAAAA,EAAAA,YAAU,YACRf,EAAAA,EAAAA,IAAaY,GACVI,MAAK,SAAAC,GACJV,EAAgBU,EAASC,MAEzBT,GAAY,EACb,IACAU,OAAM,SAAAC,GACLC,MAAMD,GAENX,GAAY,EACb,GACJ,GAAE,CAACG,IAEJ,IAAMU,GAAWC,EAAAA,EAAAA,MAMjB,OAAOf,GACL,iBACEgB,MAAO,CACLC,QAAS,OACTC,cAAe,SACfC,IAAK,IAJT,WAOE,mBAAQC,QAZG,WAAO,IAAD,EACnBN,EAAQ,UAACZ,EAASmB,aAAV,aAAC,EAAgBC,KAC1B,EAU4BN,MAAO,CAAEO,MAAO,IAAKC,OAAQ,IAAtD,sBAIA,iBACER,MAAO,CACLC,QAAS,OACTE,IAAK,IAHT,WAME,gBACEM,IAAG,0CACD3B,EAAa4B,aAAe,oCAE9BC,IAAI,GACJJ,MAAO,OAGT,iBAAKP,MAAO,CAAEC,QAAS,OAAQC,cAAe,SAAUC,IAAK,IAA7D,WACE,wBAAKrB,EAAa8B,OAAS9B,EAAa+B,QAExC,kDAAmBC,KAAKC,MAAkC,GAA5BjC,EAAakC,cAA3C,SAEA,sCAEA,uBAAIlC,EAAamC,YAEjB,oCAEA,4BAC2BC,IAAxBpC,EAAaqC,OACVrC,EAAaqC,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMR,IAAV,IAAgBS,KAAK,KAClD,YAKV,mDAEA,2BACE,yBACE,SAAC,KAAD,CAAMC,GAAE,OAAUlB,MAAOnB,EAASmB,MAAlC,qBAIF,yBACE,SAAC,KAAD,CAAMkB,GAAE,UAAalB,MAAOnB,EAASmB,MAArC,2BAMJ,SAAC,EAAAmB,SAAD,CAAUC,UAAU,0CAApB,UACE,SAAC,KAAD,UAIJ,qCAEH,C","sources":["api.js","components/Pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '1c8add71a3be57e9a544b27831043b57';\n\nexport async function trendingMovies() {\n  return axios.get(\n    `${BASE_URL}/trending/all/day?api_key=${API_KEY}&language=en-US`\n  );\n}\n\nexport async function searchMovies(query) {\n  return axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${query}`\n  );\n}\n\nexport async function getMovieById(id) {\n  return axios.get(`${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`);\n}\n\nexport async function getMovieCredits(id) {\n  return axios.get(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n}\n\nexport async function getMovieReviews(id) {\n  return axios.get(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n}\n","import { Outlet, Link } from 'react-router-dom';\nimport { useState, useEffect, Suspense } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\n\nimport { getMovieById } from 'api';\n\nexport const MovieDetails = () => {\n  const [currentMovie, setCurrentMovie] = useState({});\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  const location = useLocation();\n\n  const movieId = location.pathname.split('/')[2];\n\n  useEffect(() => {\n    getMovieById(movieId)\n      .then(response => {\n        setCurrentMovie(response.data);\n\n        setIsLoaded(true);\n      })\n      .catch(error => {\n        alert(error);\n\n        setIsLoaded(false);\n      });\n  }, [movieId]);\n\n  const navigate = useNavigate();\n\n  const goBack = () => {\n    navigate(location.state?.from);\n  };\n\n  return isLoaded ? (\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'column',\n        gap: 20,\n      }}\n    >\n      <button onClick={goBack} style={{ width: 100, height: 30 }}>\n        Go back\n      </button>\n\n      <div\n        style={{\n          display: 'flex',\n          gap: 30,\n        }}\n      >\n        <img\n          src={`https://image.tmdb.org/t/p/w500/${\n            currentMovie.poster_path || '/8Gxv8gSFCU0XGDykEGv7zR1n2ua.jpg'\n          }`}\n          alt=\"\"\n          width={250}\n        />\n\n        <div style={{ display: 'flex', flexDirection: 'column', gap: 20 }}>\n          <h2>{currentMovie.title || currentMovie.name}</h2>\n\n          <p>User score: {`${Math.floor(currentMovie.vote_average * 10)}%`}</p>\n\n          <h3>Overview</h3>\n\n          <p>{currentMovie.overview}</p>\n\n          <h4>Genres</h4>\n\n          <p>\n            {currentMovie.genres !== undefined\n              ? currentMovie.genres.map(genre => genre.name).join(' ')\n              : ''}\n          </p>\n        </div>\n      </div>\n\n      <p>Additional information</p>\n\n      <ul>\n        <li>\n          <Link to={`cast`} state={location.state}>\n            Cast\n          </Link>\n        </li>\n        <li>\n          <Link to={`reviews`} state={location.state}>\n            Reviews\n          </Link>\n        </li>\n      </ul>\n\n      <Suspense fallback={<div>Loading.....</div>}>\n        <Outlet />\n      </Suspense>\n    </div>\n  ) : (\n    <p>Loading...</p>\n  );\n};\n"],"names":["BASE_URL","API_KEY","trendingMovies","axios","searchMovies","query","getMovieById","id","getMovieCredits","getMovieReviews","MovieDetails","useState","currentMovie","setCurrentMovie","isLoaded","setIsLoaded","location","useLocation","movieId","pathname","split","useEffect","then","response","data","catch","error","alert","navigate","useNavigate","style","display","flexDirection","gap","onClick","state","from","width","height","src","poster_path","alt","title","name","Math","floor","vote_average","overview","undefined","genres","map","genre","join","to","Suspense","fallback"],"sourceRoot":""}