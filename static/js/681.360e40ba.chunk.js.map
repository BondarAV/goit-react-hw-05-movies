{"version":3,"file":"static/js/681.360e40ba.chunk.js","mappings":"+SAEMA,EAAW,+BACXC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,uGACEC,EAAAA,EAAAA,IAAA,UACFH,EADE,qCACmCC,EADnC,qBADF,kEAMA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,0FACEF,EAAAA,EAAAA,IAAA,UACFH,EADE,iCAC+BC,EAD/B,iCAC+DI,KAFjE,kEAMA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,0FACEJ,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA+BO,EAA/B,oBAA6CN,EAA7C,qBADF,kEAIA,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WAA+BD,GAA/B,0FACEJ,EAAAA,EAAAA,IAAA,UACFH,EADE,kBACgBO,EADhB,4BACsCN,EADtC,qBADF,kEAMA,SAAeQ,EAAtB,+CAAO,OAAP,oBAAO,WAA+BF,GAA/B,0FACEJ,EAAAA,EAAAA,IAAA,UACFH,EADE,kBACgBO,EADhB,4BACsCN,EADtC,qBADF,kE,oHCvBMS,EAAU,WACrB,OAA8BC,EAAAA,EAAAA,YAA9B,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAgCF,EAAAA,EAAAA,WAAS,GAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KAIMC,GAFWC,EAAAA,EAAAA,MAEQC,SAASC,MAAM,KAAK,GAgB7C,OAdAC,EAAAA,EAAAA,YAAU,YACRX,EAAAA,EAAAA,IAAgBO,GACbK,MAAK,SAAAC,GACJT,EAAWS,EAASC,KAAKC,SAEzBT,GAAY,EACb,IACAU,OAAM,SAAAC,GACLC,MAAMD,GAENX,GAAY,EACb,GACJ,GAAE,CAACC,IAEGF,GACL,yBACsB,IAAnBF,EAAQgB,QACP,qEAEA,eAAIC,MAAO,CAAEC,QAAS,OAAQC,cAAe,SAAUC,IAAK,IAA5D,SACGpB,EAAQqB,KAAI,SAAAC,GAAM,OACjB,2BACE,qCAAaA,EAAOC,WAEpB,uBAAID,EAAOE,YAHJF,EAAO3B,GADC,SAWzB,qCAEH,C","sources":["api.js","components/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '1c8add71a3be57e9a544b27831043b57';\n\nexport async function trendingMovies() {\n  return axios.get(\n    `${BASE_URL}/trending/all/day?api_key=${API_KEY}&language=en-US`\n  );\n}\n\nexport async function searchMovies(query) {\n  return axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${query}`\n  );\n}\n\nexport async function getMovieById(id) {\n  return axios.get(`${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`);\n}\n\nexport async function getMovieCredits(id) {\n  return axios.get(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n}\n\nexport async function getMovieReviews(id) {\n  return axios.get(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n}\n","import { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { getMovieReviews } from 'api';\n\nexport const Reviews = () => {\n  const [reviews, setReviews] = useState();\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  const location = useLocation();\n\n  const movieId = location.pathname.split('/')[2];\n\n  useEffect(() => {\n    getMovieReviews(movieId)\n      .then(response => {\n        setReviews(response.data.results);\n\n        setIsLoaded(true);\n      })\n      .catch(error => {\n        alert(error);\n\n        setIsLoaded(false);\n      });\n  }, [movieId]);\n\n  return isLoaded ? (\n    <div>\n      {reviews.length === 0 ? (\n        <p>We don't have any reviews for this movie</p>\n      ) : (\n        <ul style={{ display: 'flex', flexDirection: 'column', gap: 30 }}>\n          {reviews.map(review => (\n            <li key={review.id}>\n              <h3>Author: {review.author}</h3>\n\n              <p>{review.content}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  ) : (\n    <p>Loading...</p>\n  );\n};\n"],"names":["BASE_URL","API_KEY","trendingMovies","axios","searchMovies","query","getMovieById","id","getMovieCredits","getMovieReviews","Reviews","useState","reviews","setReviews","isLoaded","setIsLoaded","movieId","useLocation","pathname","split","useEffect","then","response","data","results","catch","error","alert","length","style","display","flexDirection","gap","map","review","author","content"],"sourceRoot":""}