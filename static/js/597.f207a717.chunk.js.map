{"version":3,"file":"static/js/597.f207a717.chunk.js","mappings":"+SAEMA,EAAW,+BACXC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,uGACEC,EAAAA,EAAAA,IAAA,UACFH,EADE,qCACmCC,EADnC,qBADF,kEAMA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,0FACEF,EAAAA,EAAAA,IAAA,UACFH,EADE,iCAC+BC,EAD/B,iCAC+DI,KAFjE,kEAMA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,0FACEJ,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA+BO,EAA/B,oBAA6CN,EAA7C,qBADF,kEAIA,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WAA+BD,GAA/B,0FACEJ,EAAAA,EAAAA,IAAA,UACFH,EADE,kBACgBO,EADhB,4BACsCN,EADtC,qBADF,kEAMA,SAAeQ,EAAtB,+CAAO,OAAP,oBAAO,WAA+BF,GAA/B,0FACEJ,EAAAA,EAAAA,IAAA,UACFH,EADE,kBACgBO,EADhB,4BACsCN,EADtC,qBADF,kE,iHCvBMS,EAAO,WAClB,OAAwBC,EAAAA,EAAAA,YAAxB,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAgCF,EAAAA,EAAAA,WAAS,GAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KAIMC,GAFWC,EAAAA,EAAAA,MAEQC,SAASC,MAAM,KAAK,GAc7C,OAZAC,EAAAA,EAAAA,YAAU,YACRZ,EAAAA,EAAAA,IAAgBQ,GACbK,MAAK,SAAAC,GACJT,EAAQS,EAASC,KAAKX,MACtBG,GAAY,EACb,IACAS,OAAM,SAAAC,GACLC,MAAMD,GACNV,GAAY,EACb,GACJ,GAAE,CAACC,KAEgB,IAAbF,GACL,0BACE,eAAIa,MAAO,CAAEC,QAAS,OAAQC,SAAU,OAAQC,IAAK,IAArD,SACGlB,EAAKmB,KAAI,SAAAC,GAAM,OACd,2BACE,gBACEC,IAAG,0CACDD,EAAOE,cAAgB,oCAEzBC,IAAI,GACJC,MAAO,OAGT,uBAAIJ,EAAOK,QACX,uCAAeL,EAAOM,eAVfN,EAAOzB,GADF,SAiBpB,kBAEH,C","sources":["api.js","components/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '1c8add71a3be57e9a544b27831043b57';\n\nexport async function trendingMovies() {\n  return axios.get(\n    `${BASE_URL}/trending/all/day?api_key=${API_KEY}&language=en-US`\n  );\n}\n\nexport async function searchMovies(query) {\n  return axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${query}`\n  );\n}\n\nexport async function getMovieById(id) {\n  return axios.get(`${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`);\n}\n\nexport async function getMovieCredits(id) {\n  return axios.get(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n}\n\nexport async function getMovieReviews(id) {\n  return axios.get(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n}\n","import { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { getMovieCredits } from 'api';\n\nexport const Cast = () => {\n  const [cast, setCast] = useState();\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  const location = useLocation();\n\n  const movieId = location.pathname.split('/')[2];\n\n  useEffect(() => {\n    getMovieCredits(movieId)\n      .then(response => {\n        setCast(response.data.cast);\n        setIsLoaded(true);\n      })\n      .catch(error => {\n        alert(error);\n        setIsLoaded(false);\n      });\n  }, [movieId]);\n\n  return isLoaded === true ? (\n    <div>\n      <ul style={{ display: 'flex', flexWrap: 'wrap', gap: 75 }}>\n        {cast.map(person => (\n          <li key={person.id}>\n            <img\n              src={`https://image.tmdb.org/t/p/w500/${\n                person.profile_path || '/8Gxv8gSFCU0XGDykEGv7zR1n2ua.jpg'\n              }`}\n              alt=\"\"\n              width={200}\n            />\n\n            <p>{person.name}</p>\n            <p>Character: {person.character}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  ) : (\n    <div></div>\n  );\n};\n"],"names":["BASE_URL","API_KEY","trendingMovies","axios","searchMovies","query","getMovieById","id","getMovieCredits","getMovieReviews","Cast","useState","cast","setCast","isLoaded","setIsLoaded","movieId","useLocation","pathname","split","useEffect","then","response","data","catch","error","alert","style","display","flexWrap","gap","map","person","src","profile_path","alt","width","name","character"],"sourceRoot":""}